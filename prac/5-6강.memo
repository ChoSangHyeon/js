// 하나의 함수는 한가지 일만 복잡한 일은 나누자
// 함수는 동사형태로 이름을 정하자
// 변수는 명사로

// 펑션은 오브젝트이다 (자바스크트)
// 오브젝트는 레퍼런스로 전달
// 디폴트파라미터 변수입력에 저장
//  (...args )배열형태로 전달 

//  for (const a of args) == 파이썬 for in

//  조건이 맞지않는경우 빠른 리턴

//  펑션은 이름이 없을수도 있을수도 있다.

//  함수에 함수를 입력할수있다.

//  에로우펑션은 이름이 없는 펑션

//   => 에로우 펑션
//   const add = (a,b) => a+b;
//   (const add = function() {
//       return a+b;
//   })()
//  IIFE 선언과 동시에 바로 실행
// =====================================================================


// 클레스안에는 필드(변수)와 메소드(펑션)가 들어있다.

// 클레스(구조선언)를 이용해서 오브젝트를 만든다.
// class person{
//     #private = 0;
//     construcoor(){
//         this.a = a;
//         this.b = b;
//     }
//     speak(){
//         console.log(`${this.a}`)
//     }
//     get a(){
//         return this._a;
//     }
//     set a(val){
//         if (val < 0){
//             throw Error('나이가 마이너스?')
//         }
        
//         this._a = val < 0 ? 0 : val;
//     }
// }
// const hi = new person(3,4)

// 공통적으로 클레스에서 사용하는것이라면 스태틱을 사용한다.

//  extends 를 이용해서 클레스안에 클레스를 넣을수있다.
// 만약 안에넣은 클레스와 같은 이름으로 펑션을 주면 넣은 클레스의 같은이름 펑션은
// 무효한다. 만약 부모의 클레스의 펑션도 호출하고 싶으면 super.를쓴다.

//  자식 instanceof 부모 // 부모가 맞는지 확인하는 것


